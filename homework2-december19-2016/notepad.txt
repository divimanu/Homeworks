1.	try to clone my repo 
1.	https://github.com/karthikkrishna611/UIClassDecember-18-2016
  A:  I done to clone your repository through source tree.

2.	Attempt to create a own repo for submitting homework and list down all the steps in creating repo in github.com.
•	Start a project / create a new repository 
•	Give repository name  public/private (depends what you need)
•	Create repository
•	When it was done save the text file with sublime and save it 
•	Go to source tree clone/new 
•	Click on master and stage all push  give the origin with link .
3.	research about all git hub commands and write an explanation for all the following commands in details and when to use them
•	git init : initializes a git repository – creates the initial ‘.git’ directory in a new or in an existing project.
•	git clone : Makes a Git repository copy from a remote source. Also adds the original location as a remote so you can fetch from it again and push to it if you have 
permissions. 
•	git add: Adds files changes in your working directory to your index. 
•	git rm : Removes files from your index and your working directory so they will not be tracked.
•	git commit: Takes all of the changes written in the index, creates a new commit object pointing to it and sets the branch to point to that new commit. 
•	git branch: Lists existing branches, including remote branches if ‘-a’ is provided. Creates a new branch if a branch name is provided.
•	git checkout: Checks out a different branch – switches branches by updating the index, working tree, and HEAD to reflect the chosen branch. 
•	git merge: Merges one or more branches into your current branch and automatically creates a new commit if there are no conflicts. 
•	git reset: Resets your index and working directory to the state of your last commit. 
•	git stash: Temporarily saves changes that you don’t want to commit immediately. You can apply the changes later. 
•	git fetch: Fetches all the objects from the remote repository that are not present in the local one. 
•	git pull: Fetches the files from the remote repository and merges it with your local one. This command is equal to the git fetch and the git merge sequence. 
•	git push: Pushes all the modified local objects to the remote repository and advances its branches. 
•	git remote: Shows all the remote versions of your repository. 
•	git log: Shows a listing of commits on a branch including the corresponding details. 
•	git show: Shows information about a git object. 
•	git grep: Lets you search through your trees of content for words and phrases. 
•	git diff: Generates patch files or statistics of differences between paths or files in your git repository, or your index or your working directory.

4.	Git hub cheat sheet:?
I.	Create a new local Repository : $ git init
II.	Changed files in your working directory : $ git status
III.	 Add all current changes to the next commit : $ git add
IV.	Commit all local changes in tracked files : $ git commit -a
V.	Show all commits, starting with newest : $ git log 
VI.	List all exisiting branches : $ git branch -av 
VII.	Delete a local branch : $ git branch -d <branch>
VIII.	 Add new remote repository, named <remote> : $git remote add <shortname><url>
IX.	Publish local changes on a remote  : $git push <remote><branch>
X.	Merge <branch> into your current HEAD : $ git merge <branch>
XI.	 Preserve all changes as unstaged changes : $ git reset <commit>

